name: Deploy to ECS

on:
  push:
    branches:
      - grupo_r

env:
  AWS_REGION: us-east-1
  IMAGE_NAME: hackaton-image
  ECS_CLUSTER: hackaton_cluster
  ECS_SERVICE: hackaton-service
  TASK_DEFINITION: infra/task-definition.json

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build and tag Docker image
        id: build-image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          ls -lhart
          cat DockerFile
          pwd
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} .
          docker tag ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      - name: Login to AWS ECR
        env:
          AWS_REGION: us-east-1
          ECR_REGISTRY: 178675768868.dkr.ecr.us-east-1.amazonaws.com
          ECR_REPOSITORY: hackaton_repo
        run: |
          echo ${{ secrets.AWS_ACCESS_KEY_ID }} | aws configure --profile user1 --access-key-id ${{ secrets.AWS_ACCESS_KEY_ID }}
          echo ${{ secrets.AWS_SECRET_ACCESS_KEY }} | aws configure --profile user1 --secret-access-key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}

      - name: Push Docker image to ECR
        id: push-image
        env:
          IMAGE_TAG: ${{ github.sha }}
          LOGIN_SERVER: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker push ${{ env.LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      
      - name: Deploy to ECS
        run: |
          echo "Registering new task definition from $TASK_DEFINITION"
          task_definition=$(cat $TASK_DEFINITION)
          task_definition=$(echo "$task_definition" | sed "s;%BUILD_NUMBER%;$GITHUB_RUN_NUMBER;g")
          task_definition_arn=$(aws ecs register-task-definition --cli-input-json "$task_definition" --query 'taskDefinition.taskDefinitionArn' --output text)
          echo "Updating service $ECS_SERVICE_NAME with task definition $task_definition_arn"
          aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE_NAME --task-definition $task_definition_arn